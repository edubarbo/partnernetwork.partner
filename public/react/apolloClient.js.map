{"version":3,"sources":["webpack://partnernetwork.partner/../apolloClient.js","webpack://partnernetwork.partner/./react/apolloClient.ts","webpack://partnernetwork.partner/external \"GraphQL\"","webpack://partnernetwork.partner/external \"React\""],"names":["requireEntry","require","__webpack_public_path__","getPublicPath","register","module","renderHotReload","setupHMR"],"mappings":";;;;;;AACI;AAAA;AAAA;AAAA;;AACA,IAAMA,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAMC,mBAAO,CAAC,yBAAD,CAAb;AAAA,CAArB;;AAEAC,qBAAuB,GAAGC,4HAAa,CAAC,8BAAD,CAAvC;;gBAEoCC,uHAAQ,CAACJ,YAAD,EAAeK,MAAf,EAAuB,8BAAvB,EAAuD,4BAAvD,EAAqF,cAArF,C;IAArCC,e,aAAAA,e;IAAiBC,Q,aAAAA,Q;;AACxB,IAAIF,KAAJ,EAA4B,2B;;;;;;;;;ACPhC;AAAA;AAAA;AAAA;AAAA;AACA;AAEO,IAAM,MAAM,GAAG,IAAI,2DAAJ,CAAiB;AACrC,OAAK,EAAE,IAAI,4DAAJ,CAAkB;AACvB,eAAW,EAAE;AADU,GAAlB,CAD8B;AAIrC;AACA;AACA,MAAI,EAAE,6EAAgB,CAAC;AACrB,OAAG,YAAK,MAAM,CAAC,QAAP,CAAgB,MAArB;AADkB,GAAD;AANe,CAAjB,CAAf,C;;;;;;;ACHP,yB;;;;;;;ACAA,uB","file":"apolloClient.js","sourcesContent":["\n    import {getPublicPath, register} from '/usr/local/data/service/src/node/build/react/3.x/entrypoints/shared.js'\n    const requireEntry = () => require('/cache/build/build_partnernetwork_master/partnernetwork.partner@5.0.9/src/react/apolloClient.ts')\n\n    __webpack_public_path__ = getPublicPath('partnernetwork.partner@5.0.9')\n\n    const {renderHotReload, setupHMR} = register(requireEntry, module, 'partnernetwork.partner@5.0.9', 'partnernetwork.partner@5.x', 'apolloClient')\n    if (module.hot && setupHMR) {\n      require('/usr/local/data/service/node_modules/webpack/hot/dev-server.js')\n      const hotLog = require('/usr/local/data/service/node_modules/webpack/hot/log.js')\n      const hotEmitter = require('/usr/local/data/service/node_modules/webpack/hot/emitter.js')\n\n      setupHMR(hotEmitter, hotLog)\n      if (renderHotReload) {\n        module.hot.accept('/cache/build/build_partnernetwork_master/partnernetwork.partner@5.0.9/src/react/apolloClient.ts', renderHotReload)\n      }\n    }\n","import { ApolloClient, InMemoryCache } from '@apollo/client'\nimport { createUploadLink } from 'apollo-upload-client'\n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache({\n    addTypename: false,\n  }),\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  link: createUploadLink({\n    uri: `${window.location.origin}/gql`,\n  }),\n})\n","module.exports = GraphQL;","module.exports = React;"],"sourceRoot":""}