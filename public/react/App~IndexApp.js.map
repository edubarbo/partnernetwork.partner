{"version":3,"sources":["webpack://partnernetwork.partner/./react/App.tsx","webpack://partnernetwork.partner/./react/components/Select/DropdownIndicator/index.tsx","webpack://partnernetwork.partner/./react/components/Select/index.tsx","webpack://partnernetwork.partner/./react/components/Table/index.tsx","webpack://partnernetwork.partner/./react/components/TableRow/index.tsx","webpack://partnernetwork.partner/./react/components/Title/index.tsx","webpack://partnernetwork.partner/./react/components/UploadImage/index.tsx","webpack://partnernetwork.partner/./react/components/UploadImageContainer/index.tsx","webpack://partnernetwork.partner/./react/containers/PartnerClients/ClientsTable/index.tsx","webpack://partnernetwork.partner/./react/containers/PartnerClients/NewClientForm/index.tsx","webpack://partnernetwork.partner/./react/containers/PartnerClients/index.tsx","webpack://partnernetwork.partner/./react/containers/PartnerData/categories.ts","webpack://partnernetwork.partner/./react/containers/PartnerData/countries.tsx","webpack://partnernetwork.partner/./react/containers/PartnerData/index.tsx","webpack://partnernetwork.partner/./react/containers/PartnerData/partnerTypes.tsx","webpack://partnernetwork.partner/./react/containers/PartnerServices/NewServiceForm/index.tsx","webpack://partnernetwork.partner/./react/containers/PartnerServices/ServicesTable/index.tsx","webpack://partnernetwork.partner/./react/containers/PartnerServices/index.tsx","webpack://partnernetwork.partner/./react/hooks/usePartnerClients/index.ts","webpack://partnernetwork.partner/./react/hooks/usePartnerData/index.ts","webpack://partnernetwork.partner/./react/hooks/usePartnerServices/index.ts","webpack://partnernetwork.partner/./react/state/reducer/index.ts","webpack://partnernetwork.partner/./react/state/reducer/index.types.ts","webpack://partnernetwork.partner/./react/state/store/index.tsx"],"names":[],"mappings":"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","file":"App~IndexApp.js","sourcesContent":["// Dependencies\nimport React, { useState } from 'react'\nimport { Tab, Tabs, PageBlock } from 'vtex.styleguide'\nimport { FormattedMessage } from 'react-intl'\n\n// Containers\nimport PartnerData from './containers/PartnerData'\nimport PartnerServices from './containers/PartnerServices'\nimport PartnerClients from './containers/PartnerClients'\n\n// Hooks\nimport usePartnerData from './hooks/usePartnerData'\n\nconst App = () => {\n  const { partnerData } = usePartnerData()\n  const [currentTab, setCurrentTab] = useState(0)\n\n  return (\n    <Tabs fullWidth>\n      <Tab\n        active={currentTab === 0}\n        onClick={() => setCurrentTab(0)}\n        label={<FormattedMessage id=\"partnernetwork.app.tab.partnerdata\" />}\n      >\n        <PageBlock variation=\"full\">\n          <PartnerData />\n        </PageBlock>\n      </Tab>\n\n      <Tab\n        active={currentTab === 1}\n        disabled={!partnerData.id}\n        onClick={() => setCurrentTab(1)}\n        label={<FormattedMessage id=\"partnernetwork.app.tab.services\" />}\n      >\n        <PageBlock variation=\"full\">\n          <PartnerServices />\n        </PageBlock>\n      </Tab>\n\n      <Tab\n        active={currentTab === 2}\n        disabled={!partnerData.id}\n        onClick={() => setCurrentTab(2)}\n        label={<FormattedMessage id=\"partnernetwork.app.tab.clients\" />}\n      >\n        <PageBlock variation=\"full\">\n          <PartnerClients />\n        </PageBlock>\n      </Tab>\n    </Tabs>\n  )\n}\n\nexport default App\n","// Dependencies\nimport React from 'react'\n\nconst DropdownIndicator = () => (\n  <div className=\"ml4 flex items-center\">\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0)\">\n        <path\n          d=\"M13.7262 4.39069L8.00211 10.1147L2.27804 4.39069C2.02657 4.14782 1.68977 4.01342 1.34017 4.01646C0.990566 4.0195 0.656145 4.15972 0.408931 4.40694C0.161717 4.65415 0.0214904 4.98856 0.0184525 5.33816C0.0154146 5.68775 0.149809 6.02456 0.392689 6.27603L7.05944 12.9427C7.30948 13.1927 7.64856 13.3331 8.00211 13.3331C8.35567 13.3331 8.69475 13.1927 8.94479 12.9427L15.6115 6.27603C15.7389 6.15303 15.8405 6.0059 15.9103 5.84323C15.9802 5.68056 16.017 5.5056 16.0185 5.32856C16.0201 5.15152 15.9863 4.97595 15.9193 4.81209C15.8523 4.64823 15.7533 4.49936 15.6281 4.37417C15.5029 4.24898 15.354 4.14997 15.1901 4.08293C15.0263 4.01589 14.8507 3.98215 14.6737 3.98369C14.4966 3.98523 14.3217 4.02201 14.159 4.09189C13.9963 4.16177 13.8492 4.26335 13.7262 4.39069Z\"\n          fill=\"#142032\"\n        />\n      </g>\n\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width=\"16.0002\" height=\"16\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </div>\n)\n\nexport default DropdownIndicator\n","/* eslint-disable @typescript-eslint/camelcase */\n/* eslint-disable react/jsx-pascal-case */\n// Dependencies\nimport React from 'react'\nimport { EXPERIMENTAL_Select } from 'vtex.styleguide'\n\n// Components\nimport DropdownIndicator from './DropdownIndicator'\n\nexport interface ISelectProps {\n  value?: ISelectOption | ISelectOption[] | string\n  multi?: boolean\n  placeholder?: string | React.ReactElement\n  errorMessage?: string\n  options: ISelectOption[]\n  onChange?: (value: ISelectOption | ISelectOption[]) => void\n}\n\nconst Select: React.FC<ISelectProps> = ({\n  value,\n  options,\n  onChange,\n  errorMessage,\n  multi = true,\n  placeholder = 'Select...',\n}) => (\n  <div className=\"select-input-container\">\n    <EXPERIMENTAL_Select\n      value={value}\n      multi={multi}\n      options={options}\n      onChange={onChange}\n      placeholder={placeholder}\n      errorMessage={errorMessage}\n      components={{ DropdownIndicator }}\n    />\n  </div>\n)\n\nexport default Select\n","// Dependencies\nimport React from 'react'\n\nconst Table: React.FC = ({ children }) => (\n  <section className=\"table mb7 mb8-l\">{children}</section>\n)\n\nexport default Table\n","// Dependencies\nimport React, { ChangeEvent, MouseEvent } from 'react'\nimport { Checkbox } from 'vtex.styleguide'\n\ninterface TableRowProps extends Omit<IClientItem, 'imgURL' | 'id'> {\n  imgURL?: string\n  showEmptyImage?: boolean\n  onCheckboxChange: (event: ChangeEvent<HTMLInputElement>) => void\n  onButtonRemoveClick: (event: MouseEvent<HTMLButtonElement>) => void\n}\n\nconst TableRow: React.FC<TableRowProps> = ({\n  name,\n  imgURL,\n  isActive,\n  description,\n  onCheckboxChange,\n  onButtonRemoveClick,\n  showEmptyImage = true,\n}) => {\n  return (\n    <div className=\"table-row\">\n      <div className=\"mr5 mr7-l\">\n        <Checkbox\n          id={name}\n          name={name}\n          checked={isActive}\n          onChange={onCheckboxChange}\n        />\n      </div>\n\n      <div className=\"flex w-100 items-center\">\n        {!imgURL && showEmptyImage && (\n          <span className=\"table-row__empty-image mr5\" />\n        )}\n\n        {imgURL && (\n          <div className=\"table-row__image-container mr5\">\n            <img src={imgURL} alt={name} className=\"table-row__image\" />\n          </div>\n        )}\n\n        <div className=\"table-row__group\">\n          <h3 className=\"table-row__name\">{name}</h3>\n\n          <p className=\"table-row__short-description\">{description}</p>\n        </div>\n      </div>\n\n      <div className=\"ml5 ml7-l\">\n        <button\n          className=\"table-row__button-remove\"\n          onClick={onButtonRemoveClick}\n        >\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M5 7H19\"\n              stroke=\"#142032\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M18 7V18C18 19.105 17.105 20 16 20H8C6.895 20 6 19.105 6 18V7\"\n              stroke=\"#142032\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M15 3.75H9\"\n              stroke=\"#142032\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M10 11V16\"\n              stroke=\"#142032\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M14 11V16\"\n              stroke=\"#142032\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default TableRow\n","// Dependencies\nimport React from 'react'\n\nconst Title: React.FC = ({ children }) => <h2 className=\"title\">{children}</h2>\n\nexport default Title\n","// Dependencies\nimport React, { useState, useEffect, ChangeEvent } from 'react'\n\nexport interface IUploadImageProps {\n  id: string\n  error?: boolean\n  imgURL?: string\n  onImageChange?: (imgURL: string, file?: File) => void\n}\n\nconst UploadImage: React.FC<IUploadImageProps> = ({\n  id,\n  error,\n  imgURL,\n  onImageChange,\n}) => {\n  const [url, setURL] = useState('')\n\n  const handleOnChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files as FileList\n\n    if (files?.length === 0) {\n      setURL('')\n\n      return\n    }\n\n    // eslint-disable-next-line prefer-destructuring\n    const file = files[0]\n\n    const reader = new FileReader()\n\n    reader.onload = () => {\n      const newURL = reader.result as string\n\n      setURL(newURL)\n\n      if (onImageChange) {\n        onImageChange(newURL, file)\n      }\n    }\n\n    reader.readAsDataURL(file)\n  }\n\n  useEffect(() => {\n    if (imgURL && imgURL !== url) {\n      setURL(imgURL)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imgURL])\n\n  const classNames = ['upload-image']\n\n  if (error) {\n    classNames.push('upload-image--error')\n  }\n\n  return (\n    <div className={classNames.join(' ')}>\n      <label htmlFor={id} className=\"upload-image-input-label\">\n        {url && <img src={url} alt=\"preview\" />}\n      </label>\n\n      <input\n        id={id}\n        type=\"file\"\n        accept=\".jpg,jpeg,.png\"\n        onChange={handleOnChange}\n        className=\"upload-image-input\"\n      />\n    </div>\n  )\n}\n\nexport default UploadImage\n","// Dependencies\nimport React from 'react'\n\n// Components\nimport UploadImage, { IUploadImageProps } from '../UploadImage'\n\ninterface UploadImageContainerProps extends IUploadImageProps {\n  errorMessage?: string | React.ReactElement\n  title: string | React.ReactElement\n  description?: string | React.ReactElement\n}\n\nconst UploadImageContainer: React.FC<UploadImageContainerProps> = ({\n  id,\n  title,\n  error,\n  imgURL,\n  errorMessage,\n  description,\n  onImageChange,\n}) => (\n  <div className=\"upload-image-container\">\n    <div className=\"flex\">\n      <div className=\"mr5 mr7-l\">\n        <UploadImage\n          onImageChange={onImageChange}\n          error={error}\n          id={id}\n          imgURL={imgURL}\n        />\n      </div>\n\n      <div className=\"flex flex-column justify-center w-100\">\n        <h2 className=\"ma0 mb3 upload-image-container-title\">{title}</h2>\n\n        {description && (\n          <p className=\"ma0 upload-image-container-description\">\n            {description}\n          </p>\n        )}\n      </div>\n    </div>\n\n    {errorMessage && (\n      <div className=\"vtex-input__error c-danger t-small mt3 lh-title\">\n        {errorMessage}\n      </div>\n    )}\n  </div>\n)\n\nexport default UploadImageContainer\n","// Dependencies\nimport React, { useEffect } from 'react'\nimport { Button, Spinner } from 'vtex.styleguide'\nimport { FormattedMessage } from 'react-intl'\nimport { useQuery, useMutation, gql } from '@apollo/client'\n\n// Components\nimport Table from '../../../components/Table'\nimport TableRow from '../../../components/TableRow'\n\n// Hooks\nimport usePartnerData from '../../../hooks/usePartnerData'\nimport usePartnerClients from '../../../hooks/usePartnerClients'\n\n// Queries\nconst getClientsQuery = gql`\n  query getClients($partnerID: ID) {\n    clients(partnerID: $partnerID)\n      @context(provider: \"partnernetwork.vtex-services@0.x\") {\n      id\n      name\n      imgURL\n      isActive\n      description\n      accountName\n    }\n  }\n`\n\nconst saveClientsQuery = gql`\n  mutation saveClients($partnerID: ID, $clients: [ClientInput!]) {\n    saveClients(partnerID: $partnerID, clients: $clients)\n      @context(provider: \"partnernetwork.vtex-services@0.x\") {\n      id\n      name\n      imgURL\n      isActive\n      description\n      accountName\n    }\n  }\n`\n\nconst updateClientQuery = gql`\n  mutation updateClient($id: ID, $input: ClientInput) {\n    updateClient(id: $id, input: $input)\n      @context(provider: \"partnernetwork.vtex-services@0.x\") {\n      id\n      name\n      imgURL\n      isActive\n      description\n    }\n  }\n`\n\ninterface ClientsTableProps {\n  setShowForm(showForm: boolean): void\n}\n\nconst ClientsTable: React.FC<ClientsTableProps> = ({ setShowForm }) => {\n  const { partnerData } = usePartnerData()\n  const {\n    clients,\n    addClients,\n    removeClient,\n    updateClient,\n  } = usePartnerClients()\n\n  const { data, loading: getLoading } = useQuery(getClientsQuery, {\n    variables: {\n      partnerID: partnerData.id,\n    },\n  })\n\n  const [saveClientsMutation, { loading }] = useMutation(saveClientsQuery)\n  const [updateClientMutation] = useMutation(updateClientQuery)\n\n  const handleButtonSaveClick = () => {\n    const clientsWithoutImgURL = clients.map((client) => {\n      const { imgURL, ...clientWithoutImgURL } = client\n\n      return clientWithoutImgURL\n    })\n\n    saveClientsMutation({\n      variables: {\n        clients: clientsWithoutImgURL,\n        partnerID: partnerData.id,\n      },\n    })\n  }\n\n  useEffect(() => {\n    if (!data || !data.clients || clients.length > 0) return\n\n    addClients(data.clients)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  if (getLoading) {\n    return (\n      <div className=\"flex justify-center ma6\">\n        <Spinner color=\"#f71963\" size={50} />\n      </div>\n    )\n  }\n\n  return (\n    <>\n      {clients && clients.length > 0 && (\n        <Table>\n          {clients.map((client) => (\n            <TableRow\n              key={client.id}\n              name={client.name}\n              imgURL={client.imgURL}\n              isActive={client.isActive}\n              description={client.description}\n              accountName={client.accountName}\n              onButtonRemoveClick={() => {\n                const { id, imgURL, ...partialClient } = client\n\n                updateClientMutation({\n                  variables: {\n                    id,\n                    input: {\n                      ...partialClient,\n                      isRemoved: true,\n                    },\n                  },\n                })\n\n                removeClient(id)\n              }}\n              onCheckboxChange={({ target: { checked } }) => {\n                updateClient({\n                  ...client,\n                  isActive: checked,\n                })\n              }}\n            />\n          ))}\n        </Table>\n      )}\n\n      <div className=\"actions flex flex-column flex-row-l justify-between-l\">\n        <div className=\"button-add-container mb4 mb0-l w-auto-l\">\n          {clients.length < 5 && (\n            <Button onClick={() => setShowForm(true)}>\n              <FormattedMessage id=\"partnernetwork.app.button-add-client\" />\n            </Button>\n          )}\n        </div>\n\n        <div className=\"actions flex flex-column-reverse flex-row-l justify-end-l\">\n          {clients.length > 0 && (\n            <div className=\"mb4 mb0-l button-save-container\">\n              <Button onClick={handleButtonSaveClick} disabled={loading}>\n                <>\n                  {loading ? (\n                    <Spinner color=\"#FFF\" size={20} />\n                  ) : (\n                    <FormattedMessage id=\"partnernetwork.app.button-save\" />\n                  )}\n                </>\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ClientsTable\n","// Dependencies\nimport React, { useState, useEffect, ChangeEvent } from 'react'\nimport { Input, Checkbox, Button, Textarea, Spinner } from 'vtex.styleguide'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport { useMutation, gql } from '@apollo/client'\n\n// Components\nimport UploadImageContainer from '../../../components/UploadImageContainer'\n\n// Hooks\nimport usePartnerData from '../../../hooks/usePartnerData'\nimport usePartnerClients from '../../../hooks/usePartnerClients'\n\n// Queries\nconst createClientQuery = gql`\n  mutation createClient($partnerID: ID, $input: ClientInput) {\n    newClient: createClient(partnerID: $partnerID, input: $input) {\n      id\n      name\n      imgURL\n      isActive\n      description\n      accountName\n    }\n  }\n`\n\ninterface NewClientFormProps {\n  setShowForm(showForm: boolean): void\n}\n\nlet clientFile: File\n\nconst NewClientForm: React.FC<NewClientFormProps> = ({ setShowForm }) => {\n  const { partnerData } = usePartnerData()\n  const { addClient } = usePartnerClients()\n  const [data, setData] = useState<Omit<IClientItem, 'id'>>({\n    name: '',\n    imgURL: '',\n    description: '',\n    isActive: true,\n    accountName: '',\n  })\n\n  const [createClient, { data: newData, loading }] = useMutation(\n    createClientQuery\n  )\n\n  const intl = useIntl()\n  const [errors, setErrors] = useState<IError>({})\n  const [clientApproved, setClientApproved] = useState(false)\n\n  const handleButtonSaveClick = () => {\n    const newErrors: IError = {}\n    const { name, description, accountName } = data\n\n    if(!clientApproved) {\n      newErrors.clientApproved = intl.formatMessage({\n        id: 'partnernetwork.app.errors.required',\n      })\n    }\n\n    if (name === '') {\n      newErrors.name = intl.formatMessage({\n        id: 'partnernetwork.app.errors.required',\n      })\n    } else if (name.length < 3) {\n      newErrors.name = intl.formatMessage({\n        id: 'partnernetwork.app.errors.name',\n      })\n    }\n\n    if (accountName === '') {\n      newErrors.accountName = intl.formatMessage({\n        id: 'partnernetwork.app.errors.required',\n      })\n    } else if (accountName.length < 3) {\n      newErrors.accountName = intl.formatMessage({\n        id: 'partnernetwork.app.errors.name',\n      })\n    }\n\n    if (description === '') {\n      newErrors.description = intl.formatMessage({\n        id: 'partnernetwork.app.errors.required',\n      })\n    } else if (description.length < 10) {\n      newErrors.description = intl.formatMessage({\n        id: 'partnernetwork.app.errors.description',\n      })\n    }\n\n    if (JSON.stringify(newErrors) !== '{}') {\n      setErrors(newErrors)\n\n      return\n    }\n\n    const { imgURL, ...dataWithoutImgURL } = data\n\n    createClient({\n      variables: {\n        partnerID: partnerData.id,\n        input: {\n          ...dataWithoutImgURL,\n          imgFile: clientFile,\n        },\n      },\n    })\n  }\n\n  const handleInputChange = (event: ChangeEvent) => {\n    const target = event.target as HTMLInputElement\n\n    if (target.name in errors) {\n      const newErrors = { ...errors }\n\n      delete newErrors[target.name]\n\n      setErrors(newErrors)\n    }\n\n    setData((prevData) => ({\n      ...prevData,\n      [target.name]: target.value,\n    }))\n  }\n\n  const inputClientNamePlaceholder = intl.formatMessage({\n    id: 'partnernetwork.app.input-client-name.placeholder',\n  })\n\n  const inputClientAccountNamePlaceholder = intl.formatMessage({\n    id: 'partnernetwork.app.input-client-accountName.placeholder',\n  })\n\n  const inputClientDescriptionPlaceholder = intl.formatMessage({\n    id: 'partnernetwork.app.input-client-description.placeholder',\n  })\n\n  useEffect(() => {\n    if (!newData) return\n\n    addClient(newData.newClient)\n    setShowForm(false)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [newData])\n\n  return (\n    <>\n      <div className=\"mb8\">\n        <UploadImageContainer\n          id=\"client-logo\"\n          onImageChange={(imgURL, file) => {\n            if (file) {\n              clientFile = file\n            }\n\n            setData((prevData) => ({\n              ...prevData,\n              imgURL,\n            }))\n          }}\n          title={\n            data.name || (\n              <FormattedMessage id=\"partnernetwork.app.input-client-name.placeholder\" />\n            )\n          }\n          description={\n            <FormattedMessage id=\"partnernetwork.app.upload-image-recommendation\" />\n          }\n        />\n      </div>\n\n      <div className=\"flex\">\n        <Input\n          required\n          id=\"name\"\n          name=\"name\"\n          value={data.name}\n          onChange={handleInputChange}\n          error={errors.name}\n          errorMessage={errors.name}\n          placeholder={inputClientNamePlaceholder}\n        />\n      </div>\n      <div className=\"flex mt4\">\n        <Input\n          required\n          id=\"accountName\"\n          name=\"accountName\"\n          value={data.accountName}\n          onChange={handleInputChange}\n          error={errors.accountName}\n          errorMessage={errors.accountName}\n          placeholder={inputClientAccountNamePlaceholder}\n        />\n      </div>\n      <div className={`mt4 mb4 mb7-l flex ${errors.clientApproved ? 'check-error' : ''}`}>\n        <Checkbox\n          checked={clientApproved}\n          id=\"clientApproved\"\n          label={<FormattedMessage id=\"partnernetwork.app.checkClientApproved\" />}\n          name=\"clientApproved\"\n          onChange={() => setClientApproved(!clientApproved)}\n          value={clientApproved}\n          required={true}\n        />\n      </div>\n\n      <div className=\"mb7 about-the-client\">\n        <h3 className=\"t-heading-3\">\n          <FormattedMessage id=\"partnernetwork.app.about-the-client\" />\n        </h3>\n\n        <Textarea\n          required\n          resize=\"none\"\n          id=\"description\"\n          name=\"description\"\n          value={data.description}\n          onChange={handleInputChange}\n          error={errors.description}\n          errorMessage={errors.description}\n          placeholder={inputClientDescriptionPlaceholder}\n        />\n      </div>\n\n      <div className=\"actions flex flex-column-reverse flex-row-l justify-end-l\">\n        <div className=\"mr6-l button-cancel-container\">\n          <Button onClick={() => setShowForm(false)} disabled={loading}>\n            <FormattedMessage id=\"partnernetwork.app.button-cancel\" />\n          </Button>\n        </div>\n\n        <div className=\"mb3 mb0-l button-save-container\">\n          <Button onClick={handleButtonSaveClick} disabled={loading}>\n            <>\n              {loading ? (\n                <Spinner color=\"#FFF\" size={20} />\n              ) : (\n                <FormattedMessage id=\"partnernetwork.app.button-save\" />\n              )}\n            </>\n          </Button>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default NewClientForm\n","// Dependencies\nimport React, { useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\n// Components\nimport NewClientForm from './NewClientForm'\nimport ClientsTable from './ClientsTable'\nimport Title from '../../components/Title'\n\nconst PartnerClients = () => {\n  const [showForm, setShowForm] = useState(false)\n\n  return (\n    <>\n      <Title>\n        <FormattedMessage id=\"partnernetwork.app.clients-title\" />\n      </Title>\n\n      {!showForm && <ClientsTable setShowForm={setShowForm} />}\n\n      {showForm && <NewClientForm setShowForm={setShowForm} />}\n    </>\n  )\n}\n\nexport default PartnerClients\n","export const categories = [\n  {\n    id: 'marketing',\n    name: 'Marketing',\n    subcategories: [\n      {\n        id: 'crm',\n        name: 'CRM',\n      },\n      {\n        id: 'atendimento-ao-cliente',\n        name: 'Atendimento ao cliente',\n      },\n      {\n        id: 'influenciador(a)',\n        name: 'Influenciador(a)',\n      },\n      {\n        id: 'busca-e-sugestoes',\n        name: 'Busca e sugestões',\n      },\n      {\n        id: 'fotos-e-videos',\n        name: 'Fotos e Videos',\n      },\n      {\n        id: 'automacao-chatbot-ura',\n        name: 'Automação (chatbot/URA)',\n      },\n      {\n        id: 'reviews',\n        name: 'Reviews',\n      },\n      {\n        id: 'design-and-ux',\n        name: 'Design & UX',\n      },\n    ],\n  },\n  {\n    id: 'operacoes-e-fulfillment',\n    name: 'Operações e Fulfillment',\n    subcategories: [\n      {\n        id: 'inventario-armazenamento',\n        name: 'Inventário/Armazenamento',\n      },\n      {\n        id: 'logistica-transporte',\n        name: 'Logística/Transporte',\n      },\n      {\n        id: 'erp-gestao-de-catalogo-inventario',\n        name: 'ERP - gestão de catalogo/inventário',\n      },\n    ],\n  },\n  {\n    id: 'gestao-de-ecommerce',\n    name: 'Gestão de Ecommerce',\n    subcategories: [\n      {\n        id: 'consultoria',\n        name: 'Consultoria',\n      },\n      {\n        id: 'treinamento-e-certificacao',\n        name: 'Treinamento e Certificação',\n      },\n      {\n        id: 'inteligencia-de-dados',\n        name: 'Inteligência de Dados',\n      },\n      {\n        id: 'servicos-juridicos',\n        name: 'Serviços Jurídicos',\n      },\n    ],\n  },\n  {\n    id: 'servicos-financeiros',\n    name: 'Serviços Financeiros',\n    subcategories: [\n      {\n        id: 'antifraude',\n        name: 'Antifraude',\n      },\n      {\n        id: 'servicos-de-fidelidade-cupons-clubes-devolucao',\n        name: 'Serviços de fidelidade (cupons / clubes / devolução)',\n      },\n      {\n        id: 'seguro',\n        name: 'Seguro',\n      },\n      {\n        id: 'contabilidade-e-impostos',\n        name: 'Contabilidade e Impostos',\n      },\n      {\n        id: 'provedor-de-pagamento',\n        name: 'Provedor de Pagamento',\n      },\n    ],\n  },\n  {\n    id: 'marketplaces',\n    name: 'Marketplaces',\n    subcategories: [\n      {\n        id: 'out',\n        name: 'Out',\n      },\n      {\n        id: 'in',\n        name: 'IN',\n      },\n      {\n        id: 'hub',\n        name: 'HUB',\n      },\n      {\n        id: 'seller-center',\n        name: 'Seller Center',\n      },\n    ],\n  },\n  {\n    id: 'implementacao-e-vendas',\n    name: 'Implementação e Vendas',\n    subcategories: [\n      {\n        id: 'full-commerce',\n        name: 'Full Commerce',\n      },\n      {\n        id: 'integracao-b2b-b2c-custom-apps-mobile-apps',\n        name: 'Integração (B2B/B2C/Custom apps/Mobile apps)',\n      },\n      {\n        id: 'implementador-desenvolvedor',\n        name: 'Implementador / Desenvolvedor',\n      },\n    ],\n  },\n]\n","export default [\n  'Argentina',\n  'Brasil',\n  'Chile',\n  'Colômbia',\n  'Romênia',\n  'Estados Unidos',\n]\n","// Dependencies\nimport React, { useState, useEffect, ChangeEvent } from 'react'\nimport {\n  Input,\n  Button,\n  Textarea,\n  Spinner,\n  Alert,\n  CheckboxGroup,\n} from 'vtex.styleguide'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport { useQuery, gql, useMutation } from '@apollo/client'\nimport { useRuntime } from 'vtex.render-runtime'\n\n// Data\nimport countries from './countries'\nimport partnerTypes from './partnerTypes'\nimport { categories } from './categories'\n\n// Components\nimport Select from '../../components/Select'\nimport UploadImageContainer from '../../components/UploadImageContainer'\n\n// Hooks\nimport usePartnerData from '../../hooks/usePartnerData'\n\nconst countryOptions = countries.map((country) => ({\n  label: country,\n  value: country,\n}))\n\nconst partnerQuery = gql`\n  query getPartner($account: String) {\n    partner(account: $account)\n      @context(provider: \"partnernetwork.vtex-services@0.x\") {\n      id\n      name\n      email\n      # emailTecnico\n      # emailMarketing\n      # emailFinanceiro\n      status\n      imgURL\n      website\n      types\n      regions\n      description\n      categories {\n        id\n        name\n      }\n      subcategories {\n        categoryID\n        subcategories {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst savePartnerQuery = gql`\n  mutation savePartner($input: PartnerInput) {\n    partner: savePartner(input: $input)\n      @context(provider: \"partnernetwork.vtex-services@0.x\") {\n      id\n      name\n      email\n      # emailTecnico\n      # emailMarketing\n      # emailFinanceiro\n      status\n      imgURL\n      website\n      types\n      regions\n      description\n    }\n  }\n`\n\nlet partnerFIle: File\n\nconst categoriesInitialState = categories.reduce(\n  (obj, category) => ({\n    ...obj,\n    [category.id]: category.subcategories.reduce(\n      (obj2, subcategory) => ({\n        ...obj2,\n        [subcategory.id]: {\n          checked: false,\n          label: subcategory.name,\n        },\n      }),\n      {}\n    ),\n  }),\n  {}\n)\n\ninterface CheckedMap {\n  label?: string\n  checked: boolean\n}\n\ninterface CategoriesCheckboxes {\n  [key: string]: CheckedMap\n}\n\nconst PartnerData = () => {\n  const { account } = useRuntime()\n\n  const { data, loading: loadingData } = useQuery(partnerQuery, {\n    variables: {\n      account,\n    },\n  })\n\n  const [\n    savePartner,\n    { data: newData, loading: isSavingPartner },\n  ] = useMutation(savePartnerQuery)\n\n  const { partnerData, updateField, updateData } = usePartnerData()\n\n  const [showInfo, setShowInfo] = useState(true)\n  const [errors, setErrors] = useState<IError>({})\n  const intl = useIntl()\n\n  const [\n    showCategoriesCheckboxesError,\n    setShowCategoriesCheckboxesError,\n  ] = useState(false)\n\n  const [categoriesCheckboxes, setCategoriesCheckboxes] = useState<\n    CategoriesCheckboxes\n  >(categoriesInitialState)\n\n  const removeErrorByField = (\n    field: Parameters<typeof updateField>[0]['field']\n  ) => {\n    if (!(field in errors)) return\n\n    const newErrors = { ...errors }\n\n    delete newErrors[field]\n\n    setErrors(newErrors)\n  }\n\n  const handleInputChange = (\n    value: Parameters<typeof updateField>[0]['value'],\n    field: Parameters<typeof updateField>[0]['field']\n  ) => {\n    removeErrorByField(field)\n\n    updateField({\n      field,\n      value,\n    })\n  }\n\n  const handleSelectChange = (\n    selectOptions: ISelectOption | ISelectOption[],\n    field: Parameters<typeof updateField>[0]['field']\n  ) => {\n    removeErrorByField(field)\n\n    const value = Array.isArray(selectOptions)\n      ? selectOptions.map((option) => option.value)\n      : selectOptions.value\n\n    updateField({\n      field,\n      value,\n    })\n  }\n\n  const isEmail = (email: string) =>\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)\n\n  const validateInputs = ({ showErrors = true }) => {\n    const newErrors: IError = {}\n\n    if (partnerData.name === '') {\n      newErrors.name = intl.formatMessage({\n        id: 'partnernetwork.app.errors.required',\n      })\n    } else if (partnerData.name.length < 3) {\n      // newErrors.name = 'Must be 3 characters or more'\n      newErrors.name = intl.formatMessage({\n        id: 'partnernetwork.app.errors.name',\n      })\n    }\n\n    if (partnerData.description === '') {\n      newErrors.description = intl.formatMessage({\n        id: 'partnernetwork.app.errors.required',\n      })\n    } else if (partnerData.description.length < 200) {\n      newErrors.description = intl.formatMessage({\n        id: 'partnernetwork.app.errors.description',\n      })\n    }\n\n    if (partnerData.imgURL === '') {\n      newErrors.imgURL = intl.formatMessage({\n        id: 'partnernetwork.app.errors.required',\n      })\n    }\n\n    if (partnerData.website === '') {\n      newErrors.website = intl.formatMessage({\n        id: 'partnernetwork.app.errors.required',\n      })\n    }\n\n    if (partnerData.regions.length === 0) {\n      newErrors.regions = intl.formatMessage({\n        id: 'partnernetwork.app.errors.required',\n      })\n    }\n\n    if (partnerData.types.length === 0) {\n      newErrors.types = intl.formatMessage({\n        id: 'partnernetwork.app.errors.required',\n      })\n    }\n\n    if (partnerData.email.length === 0) {\n      newErrors.email = intl.formatMessage({\n        id: 'partnernetwork.app.errors.required',\n      })\n    } else if (isEmail(partnerData.email)) {\n      newErrors.email = intl.formatMessage({\n        id: 'partnernetwork.app.errors.email',\n      })\n    }\n\n    // if (partnerData.emailTecnico.length === 0) {\n    //   newErrors.emailTecnico = intl.formatMessage({\n    //     id: 'partnernetwork.app.errors.required',\n    //   })\n    // } else if (isEmail(partnerData.emailTecnico)) {\n    //   newErrors.emailTecnico = intl.formatMessage({\n    //     id: 'partnernetwork.app.errors.email',\n    //   })\n    // }\n\n    // if (partnerData.emailMarketing.length === 0) {\n    //   newErrors.emailMarketing = intl.formatMessage({\n    //     id: 'partnernetwork.app.errors.required',\n    //   })\n    // } else if (isEmail(partnerData.emailMarketing)) {\n    //   newErrors.emailMarketing = intl.formatMessage({\n    //     id: 'partnernetwork.app.errors.email',\n    //   })\n    // }\n\n    // if (partnerData.emailFinanceiro.length === 0) {\n    //   newErrors.emailFinanceiro = intl.formatMessage({\n    //     id: 'partnernetwork.app.errors.required',\n    //   })\n    // } else if (isEmail(partnerData.emailFinanceiro)) {\n    //   newErrors.emailFinanceiro = intl.formatMessage({\n    //     id: 'partnernetwork.app.errors.email',\n    //   })\n    // }\n\n    const isValid = JSON.stringify(newErrors) === '{}'\n\n    if (!isValid && showErrors) setErrors(newErrors)\n\n    return isValid\n  }\n\n  const getCategoriesAndSubcategoriesSelected = () => {\n    const selectedCategories: Array<{\n      id: string\n      name: string\n    }> = []\n    const selectedSubcategories: Array<{\n      categoryID: string\n      subcategories: Array<{\n        id: string\n        name: string\n      }>\n    }> = []\n\n    Object.keys(categoriesCheckboxes).forEach((categoryID) => {\n      const subcategoriesObj = categoriesCheckboxes[categoryID]\n      const subcategories = Object.entries(subcategoriesObj)\n        .filter(([, subcategory]) => subcategory.checked)\n        .map(([subcategoryID, subcategory]) => ({\n          id: subcategoryID,\n          name: subcategory.label,\n        }))\n\n      if (subcategories.length === 0) return\n\n      const category = categories.find(({ id }) => id === categoryID)\n\n      if (category) {\n        selectedCategories.push({\n          id: categoryID,\n          name: category.name,\n        })\n      }\n\n      selectedSubcategories.push({\n        categoryID,\n        subcategories,\n      })\n    })\n\n    return {\n      selectedCategories,\n      selectedSubcategories,\n    }\n  }\n\n  const handleButtonSaveClick = async () => {\n    const isValid = validateInputs({ showErrors: true })\n    const {\n      selectedCategories,\n      selectedSubcategories,\n    } = getCategoriesAndSubcategoriesSelected()\n\n    if (!isValid) return\n\n    if (selectedCategories.length === 0) {\n      setShowCategoriesCheckboxesError(true)\n\n      return\n    }\n\n    const { id, status, imgURL, ...partialPartnerData } = partnerData\n\n    const imgFile = partnerFIle ? { imgFile: partnerFIle } : {}\n\n    savePartner({\n      variables: {\n        input: {\n          ...imgFile,\n          ...partialPartnerData,\n          account,\n          categories: selectedCategories,\n          subcategories: selectedSubcategories,\n        },\n      },\n    })\n  }\n\n  useEffect(() => {\n    if (!data?.partner) return\n\n    const {\n      categories: _categories,\n      subcategories,\n      ...partialPartner\n    } = data.partner\n\n    setCategoriesCheckboxes((prevState) => {\n      const newCheckedMap = _categories.reduce((obj: any, category: any) => {\n        const subcategoryFinded = subcategories.find(\n          ({ categoryID }: { categoryID: string }) => categoryID === category.id\n        )\n\n        const prevSubCategories = categoriesCheckboxes[category.id]\n\n        return {\n          ...obj,\n          [category.id]: subcategoryFinded.subcategories.reduce(\n            (obj2: any, subcategory: any) => {\n              return {\n                ...obj2,\n                [subcategory.id]: {\n                  checked: true,\n                  label: subcategory.name,\n                },\n              }\n            },\n            {\n              ...prevSubCategories,\n            }\n          ),\n        }\n      }, {})\n\n      return {\n        ...prevState,\n        ...newCheckedMap,\n      }\n    })\n\n    updateData(partialPartner)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  useEffect(() => {\n    if (!newData || !newData.partner) return\n\n    updateData(newData.partner)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [newData])\n\n  useEffect(() => {\n    if (!showCategoriesCheckboxesError) return\n\n    const { selectedCategories } = getCategoriesAndSubcategoriesSelected()\n\n    if (selectedCategories.length !== 0) {\n      setShowCategoriesCheckboxesError(false)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [categoriesCheckboxes])\n\n  const inputCompanyNamePlaceholder = intl.formatMessage({\n    id: 'partnernetwork.app.input-company-name.placeholder',\n  })\n\n  const inputWebsitePlaceholder = intl.formatMessage({\n    id: 'partnernetwork.app.input-website.placeholder',\n  })\n\n  const inputDescriptionPlaceholder = intl.formatMessage({\n    id: 'partnernetwork.app.input-description.placeholder',\n  })\n\n  const regionsValue = partnerData.regions\n    .map((region) => countryOptions.find((country) => country.value === region))\n    .filter(Boolean)\n\n  const typesValue = partnerData.types\n    .map((type) =>\n      partnerTypes.find((partnerType) => partnerType.value === type)\n    )\n    .filter(Boolean)\n\n  if (loadingData) return <Spinner />\n\n  const closedMessage = () => {\n    setShowInfo(false)\n  }\n\n  return (\n    <>\n      <div className=\"mb6\">\n        {partnerData.status === 'APPROVED' && (\n          <Alert type=\"success\">\n            <FormattedMessage id=\"partnernetwork.app.status-approved\" />\n          </Alert>\n        )}\n\n        {partnerData.status === 'PENDING' && (\n          <>\n            {showInfo && (\n              <Alert type=\"warning\" onClose={closedMessage}>\n                <FormattedMessage id=\"partnernetwork.app.status-waiting\" />\n              </Alert>\n            )}\n            <Alert type=\"warning\">\n              <FormattedMessage id=\"partnernetwork.app.status-pending\" />\n            </Alert>\n          </>\n        )}\n      </div>\n\n      <div className=\"mb8\">\n        <UploadImageContainer\n          id=\"company-logo\"\n          error={!!errors.imgURL}\n          imgURL={partnerData.imgURL}\n          errorMessage={errors.imgURL}\n          title={\n            partnerData.name || (\n              <FormattedMessage id=\"partnernetwork.app.company-name\" />\n            )\n          }\n          description={\n            <FormattedMessage id=\"partnernetwork.app.upload-image-recommendation\" />\n          }\n          onImageChange={(imgURL, file) => {\n            if (file) {\n              partnerFIle = file\n            }\n\n            handleInputChange(imgURL, 'imgURL')\n          }}\n        />\n      </div>\n\n      <div className=\"mb7 flex flex-column flex-row-l\">\n        <div className=\"w-100 mb7 mb0-l mr7-l\">\n          <Input\n            required\n            name=\"name\"\n            value={partnerData.name}\n            error={errors.name}\n            errorMessage={errors.name}\n            onChange={({\n              target: { value },\n            }: ChangeEvent<HTMLInputElement>) => {\n              handleInputChange(value, 'name')\n            }}\n            placeholder={inputCompanyNamePlaceholder}\n          />\n        </div>\n\n        <div className=\"w-100\">\n          <div className=\"select-input-container\">\n            <Select\n              multi\n              options={countryOptions}\n              errorMessage={errors.types}\n              value={regionsValue as ISelectOption[]}\n              onChange={(selectOption) =>\n                handleSelectChange(selectOption, 'regions')\n              }\n              placeholder={\n                <FormattedMessage id=\"partnernetwork.app.select-region.placeholder\" />\n              }\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mb7 flex flex-column flex-row-l\">\n        <div className=\"w-100 mb7 mb0-l mr7-l\">\n          <div className=\"select-input-container\">\n            <Select\n              multi\n              options={partnerTypes}\n              errorMessage={errors.types}\n              value={typesValue as ISelectOption[]}\n              onChange={(selectOption) =>\n                handleSelectChange(selectOption, 'types')\n              }\n              placeholder={\n                <FormattedMessage id=\"partnernetwork.app.select-partner-type.placeholder\" />\n              }\n            />\n          </div>\n        </div>\n\n        <div className=\"w-100\">\n          <Input\n            required\n            type=\"url\"\n            value={partnerData.website}\n            error={errors.website}\n            errorMessage={errors.website}\n            onChange={({\n              target: { value },\n            }: ChangeEvent<HTMLInputElement>) => {\n              handleInputChange(value, 'website')\n            }}\n            placeholder={inputWebsitePlaceholder}\n          />\n        </div>\n      </div>\n\n      <div className=\"mb7 mb8-l flex\">\n        <div className=\"w-100\">\n          <Input\n            required\n            type=\"email\"\n            value={partnerData.email}\n            error={errors.email}\n            errorMessage={errors.email}\n            onChange={({\n              target: { value },\n            }: ChangeEvent<HTMLInputElement>) => {\n              handleInputChange(value, 'email')\n            }}\n            placeholder=\"Email*\"\n          />\n        </div>\n      </div>\n\n      {/* <div className=\"mb7 mb8-l flex\">\n        <div className=\"w-100\">\n          <Input\n            required\n            type=\"email\"\n            value={partnerData.emailFinanceiro}\n            error={errors.emailFinanceiro}\n            errorMessage={errors.emailFinanceiro}\n            onChange={({\n              target: { value },\n            }: ChangeEvent<HTMLInputElement>) => {\n              handleInputChange(value, 'emailFinanceiro')\n            }}\n            placeholder=\"Financial Email*\"\n          />\n        </div>\n      </div>\n\n      <div className=\"mb7 mb8-l flex\">\n        <div className=\"w-100\">\n          <Input\n            required\n            type=\"email\"\n            value={partnerData.emailMarketing}\n            error={errors.emailMarketing}\n            errorMessage={errors.emailMarketing}\n            onChange={({\n              target: { value },\n            }: ChangeEvent<HTMLInputElement>) => {\n              handleInputChange(value, 'emailMarketing')\n            }}\n            placeholder=\"Marketing Email*\"\n          />\n        </div>\n      </div>\n\n      <div className=\"mb7 mb8-l flex\">\n        <div className=\"w-100\">\n          <Input\n            required\n            type=\"email\"\n            value={partnerData.emailTecnico}\n            error={errors.emailTecnico}\n            errorMessage={errors.emailTecnico}\n            onChange={({\n              target: { value },\n            }: ChangeEvent<HTMLInputElement>) => {\n              handleInputChange(value, 'emailTecnico')\n            }}\n            placeholder=\"Tecnical Email*\"\n          />\n        </div>\n      </div> */}\n\n      <div className=\"mb7 about-the-partner\">\n        <h3 className=\"t-heading-3\">\n          <FormattedMessage id=\"partnernetwork.app.about-the-partner\" />\n        </h3>\n        {partnerData.description.length < 200 ? (\n          <small className=\"subtitle\">\n            <FormattedMessage id=\"partnernetwork.app.about-the-partner-minimum\" />\n            : {partnerData.description.length}/200\n          </small>\n        ) : null}\n\n        <Textarea\n          required\n          resize=\"none\"\n          name=\"description\"\n          value={partnerData.description}\n          error={errors.description}\n          onChange={({\n            target: { value },\n          }: ChangeEvent<HTMLTextAreaElement>) => {\n            handleInputChange(value, 'description')\n          }}\n          errorMessage={errors.description}\n          placeholder={inputDescriptionPlaceholder}\n        />\n      </div>\n\n      <div className=\"mb7 categories-and-subcategories\">\n        <h3 className=\"t-heading-3\">\n          <FormattedMessage id=\"partnernetwork.app.categories-and-subcategories-title\" />\n        </h3>\n        <small>\n          <FormattedMessage id=\"partnernetwork.app.categories-and-subcategories-subtitle\" />\n        </small>\n\n        {categories.map((category) => {\n          const checkedMap = categoriesCheckboxes[category.id]\n\n          return (\n            <div className=\"mb6\" key={category.id}>\n              <CheckboxGroup\n                value=\"simple\"\n                id={category.id}\n                name={category.id}\n                label={category.name}\n                checkedMap={checkedMap}\n                onGroupChange={(newCheckedMap: CheckedMap) => {\n                  setCategoriesCheckboxes((prevState) => ({\n                    ...prevState,\n                    [category.id]: newCheckedMap,\n                  }))\n                }}\n              />\n            </div>\n          )\n        })}\n\n        {showCategoriesCheckboxesError && (\n          <Alert type=\"error\">\n            You need to select at lest 1 category and subcategory.\n          </Alert>\n        )}\n      </div>\n\n      <div className=\"actions flex flex-column-reverse flex-row-l justify-end-l\">\n        <div className=\"mb3 mb0-l button-save-container\">\n          <Button\n            onClick={handleButtonSaveClick}\n            disabled={!validateInputs({ showErrors: false }) || isSavingPartner}\n          >\n            <>\n              {isSavingPartner ? (\n                <Spinner color=\"#FFF\" size={20} />\n              ) : (\n                <FormattedMessage id=\"partnernetwork.app.button-save\" />\n              )}\n            </>\n          </Button>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default PartnerData\n","export default [\n  {\n    value: 'ISV',\n    label: 'ISV',\n  },\n  {\n    value: 'Agencia / Reseller',\n    label: 'Agencia / Reseller',\n  },\n]\n","// Dependencies\nimport React, { useState, useEffect, ChangeEvent } from 'react'\nimport { Input, Button, Textarea, Spinner } from 'vtex.styleguide'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport { useMutation, gql } from '@apollo/client'\n\n// Hooks\nimport usePartnerData from '../../../hooks/usePartnerData'\nimport usePartnerServices from '../../../hooks/usePartnerServices'\n\n// Queries\nconst createServiceQuery = gql`\n  mutation createService($partnerID: ID, $input: ServiceInput) {\n    newService: createService(partnerID: $partnerID, input: $input) {\n      id\n      name\n      isActive\n      description\n    }\n  }\n`\n\ninterface NewServiceFormProps {\n  setShowForm(showForm: boolean): void\n}\n\nconst NewServiceForm: React.FC<NewServiceFormProps> = ({ setShowForm }) => {\n  const { partnerData } = usePartnerData()\n  const { addService } = usePartnerServices()\n  const [data, setData] = useState<Omit<IServiceItem, 'id'>>({\n    name: '',\n    description: '',\n    isActive: true,\n  })\n\n  const [createService, { data: newData, loading }] = useMutation(\n    createServiceQuery\n  )\n\n  const intl = useIntl()\n  const [errors, setErrors] = useState<IError>({})\n\n  const handleButtonSaveClick = () => {\n    const newErrors: IError = {}\n    const { name, description } = data\n\n    if (name === '') {\n      newErrors.name = intl.formatMessage({\n        id: 'partnernetwork.app.errors.required',\n      })\n    } else if (name.length < 3) {\n      newErrors.name = intl.formatMessage({\n        id: 'partnernetwork.app.errors.name',\n      })\n    }\n\n    if (description === '') {\n      newErrors.description = intl.formatMessage({\n        id: 'partnernetwork.app.errors.required',\n      })\n    } else if (description.length < 10) {\n      newErrors.description = intl.formatMessage({\n        id: 'partnernetwork.app.errors.description',\n      })\n    }\n\n    if (JSON.stringify(newErrors) !== '{}') {\n      setErrors(newErrors)\n\n      return\n    }\n\n    createService({\n      variables: {\n        partnerID: partnerData.id,\n        input: data,\n      },\n    })\n  }\n\n  const handleInputChange = (event: ChangeEvent) => {\n    const target = event.target as HTMLInputElement\n\n    if (target.name in errors) {\n      const newErrors = { ...errors }\n\n      delete newErrors[target.name]\n\n      setErrors(newErrors)\n    }\n\n    setData((prevData) => ({\n      ...prevData,\n      [target.name]: target.value,\n    }))\n  }\n\n  const inputServiceNamePlaceholder = intl.formatMessage({\n    id: 'partnernetwork.app.input-service-name.placeholder',\n  })\n\n  const inputServiceDescriptionPlaceholder = intl.formatMessage({\n    id: 'partnernetwork.app.input-service-description.placeholder',\n  })\n\n  useEffect(() => {\n    if (!newData) return\n\n    addService(newData.newService)\n    setShowForm(false)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [newData])\n\n  return (\n    <>\n      <div className=\"mb4 mb7-l flex\">\n        <Input\n          required\n          id=\"name\"\n          name=\"name\"\n          value={data.name}\n          onChange={handleInputChange}\n          error={errors.name}\n          errorMessage={errors.name}\n          placeholder={inputServiceNamePlaceholder}\n        />\n      </div>\n\n      <div className=\"mb7 about-the-service\">\n        <h3 className=\"t-heading-3\">\n          <FormattedMessage id=\"partnernetwork.app.about-the-service\" />\n        </h3>\n\n        <Textarea\n          required\n          resize=\"none\"\n          id=\"description\"\n          name=\"description\"\n          value={data.description}\n          onChange={handleInputChange}\n          error={errors.description}\n          errorMessage={errors.description}\n          placeholder={inputServiceDescriptionPlaceholder}\n        />\n      </div>\n\n      <div className=\"actions flex flex-column-reverse flex-row-l justify-end-l\">\n        <div className=\"mr6-l button-cancel-container\">\n          <Button onClick={() => setShowForm(false)} disabled={loading}>\n            <FormattedMessage id=\"partnernetwork.app.button-cancel\" />\n          </Button>\n        </div>\n\n        <div className=\"mb3 mb0-l button-save-container\">\n          <Button onClick={handleButtonSaveClick} disabled={loading}>\n            <>\n              {loading ? (\n                <Spinner color=\"#FFF\" size={20} />\n              ) : (\n                <FormattedMessage id=\"partnernetwork.app.button-save\" />\n              )}\n            </>\n          </Button>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default NewServiceForm\n","// Dependencies\nimport React, { useEffect } from 'react'\nimport { Button, Spinner } from 'vtex.styleguide'\nimport { FormattedMessage } from 'react-intl'\nimport { useQuery, useMutation, gql } from '@apollo/client'\n\n// Components\nimport Table from '../../../components/Table'\nimport TableRow from '../../../components/TableRow'\n\n// Hooks\nimport usePartnerData from '../../../hooks/usePartnerData'\nimport usePartnerServices from '../../../hooks/usePartnerServices'\n\n// Queries\nconst getServicesQuery = gql`\n  query getServices($partnerID: ID) {\n    services(partnerID: $partnerID)\n      @context(provider: \"partnernetwork.vtex-services@0.x\") {\n      id\n      name\n      isActive\n      description\n    }\n  }\n`\n\nconst saveServicesQuery = gql`\n  mutation saveServices($partnerID: ID, $services: [ServiceInput!]) {\n    saveServices(partnerID: $partnerID, services: $services)\n      @context(provider: \"partnernetwork.vtex-services@0.x\") {\n      id\n      name\n      isActive\n      description\n    }\n  }\n`\n\nconst updateServiceQuery = gql`\n  mutation updateService($id: ID, $input: ServiceInput) {\n    updateService(id: $id, input: $input)\n      @context(provider: \"partnernetwork.vtex-services@0.x\") {\n      id\n      name\n      isActive\n      description\n    }\n  }\n`\n\ninterface ServicesTableProps {\n  setShowForm(showForm: boolean): void\n}\n\nconst ServicesTable: React.FC<ServicesTableProps> = ({ setShowForm }) => {\n  const { partnerData } = usePartnerData()\n  const {\n    services,\n    addServices,\n    removeService,\n    updateService,\n  } = usePartnerServices()\n\n  const { data, loading: getLoading } = useQuery(getServicesQuery, {\n    variables: {\n      partnerID: partnerData.id,\n    },\n  })\n\n  const [saveServicesMutation, { loading }] = useMutation(saveServicesQuery)\n  const [updateServiceMutation] = useMutation(updateServiceQuery)\n\n  const handleButtonSaveClick = () => {\n    saveServicesMutation({\n      variables: {\n        services,\n        partnerID: partnerData.id,\n      },\n    })\n  }\n\n  useEffect(() => {\n    if (!data || !data.services || services.length > 0) return\n\n    addServices(data.services)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  if (getLoading) {\n    return (\n      <div className=\"flex justify-center ma6\">\n        <Spinner color=\"#f71963\" size={50} />\n      </div>\n    )\n  }\n\n  return (\n    <>\n      {services && services.length > 0 && (\n        <Table>\n          {services.map((service) => (\n            <TableRow\n              key={service.id}\n              name={service.name}\n              showEmptyImage={false}\n              isActive={service.isActive}\n              description={service.description}\n              accountName=\"\"\n              onButtonRemoveClick={() => {\n                const { id, ...serviceWithoutID } = service\n\n                updateServiceMutation({\n                  variables: {\n                    id,\n                    input: {\n                      ...serviceWithoutID,\n                      isRemoved: true,\n                    },\n                  },\n                })\n\n                removeService(id)\n              }}\n              onCheckboxChange={({ target: { checked } }) => {\n                updateService({\n                  ...service,\n                  isActive: checked,\n                })\n              }}\n            />\n          ))}\n        </Table>\n      )}\n\n      <div className=\"actions flex flex-column flex-row-l justify-between-l\">\n        <div className=\"button-add-container mb4 mb0-l w-auto-l\">\n          {services.length < 5 && (\n            <Button onClick={() => setShowForm(true)}>\n              <FormattedMessage id=\"partnernetwork.app.button-add-service\" />\n            </Button>\n          )}\n        </div>\n\n        <div className=\"actions flex flex-column-reverse flex-row-l justify-end-l\">\n          {services.length > 0 && (\n            <div className=\"mb4 mb0-l button-save-container\">\n              <Button onClick={handleButtonSaveClick} disabled={loading}>\n                <>\n                  {loading ? (\n                    <Spinner color=\"#FFF\" size={20} />\n                  ) : (\n                    <FormattedMessage id=\"partnernetwork.app.button-save\" />\n                  )}\n                </>\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ServicesTable\n","// Dependencies\nimport React, { useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\n// Components\nimport NewServiceForm from './NewServiceForm'\nimport ServicesTable from './ServicesTable'\nimport Title from '../../components/Title'\n\nconst PartnerServices = () => {\n  const [showForm, setShowForm] = useState(false)\n\n  return (\n    <>\n      <Title>\n        <FormattedMessage id=\"partnernetwork.app.services-title\" />\n      </Title>\n\n      {!showForm && <ServicesTable setShowForm={setShowForm} />}\n\n      {showForm && <NewServiceForm setShowForm={setShowForm} />}\n    </>\n  )\n}\n\nexport default PartnerServices\n","// Dependencies\nimport { useContext } from 'react'\n\n// State\nimport { store } from '../../state/store'\nimport {\n  ADD_CLIENT,\n  ADD_CLIENTS,\n  UPDATE_CLIENT,\n  REMOVE_CLIENT,\n} from '../../state/reducer/index.types'\n\nconst usePartnerClients = () => {\n  const {\n    state: { clients },\n    dispatch,\n  } = useContext(store)\n\n  const addClient = (newClient: IClientItem) => {\n    dispatch({\n      type: ADD_CLIENT,\n      payload: newClient,\n    })\n  }\n\n  const addClients = (newClients: IClientItem[]) => {\n    dispatch({\n      type: ADD_CLIENTS,\n      payload: newClients,\n    })\n  }\n\n  const updateClient = (newClient: IClientItem) => {\n    dispatch({\n      type: UPDATE_CLIENT,\n      payload: newClient,\n    })\n  }\n\n  const removeClient = (id: IClientItem['id']) => {\n    dispatch({\n      type: REMOVE_CLIENT,\n      payload: {\n        id,\n      },\n    })\n  }\n\n  return {\n    clients,\n    addClient,\n    addClients,\n    updateClient,\n    removeClient,\n  }\n}\n\nexport default usePartnerClients\n","// Dependencies\nimport { useContext } from 'react'\n\n// State\nimport { store } from '../../state/store'\nimport {\n  IUpdatePartnerDataFieldPayload,\n  UPDATE_PARTNER_DATA,\n  UPDATE_PARTNER_DATA_FIELD,\n} from '../../state/reducer/index.types'\n\nconst usePartnerData = () => {\n  const {\n    state: { partnerData },\n    dispatch,\n  } = useContext(store)\n\n  const updateField = ({ field, value }: IUpdatePartnerDataFieldPayload) => {\n    dispatch({\n      type: UPDATE_PARTNER_DATA_FIELD,\n      payload: {\n        field,\n        value,\n      },\n    })\n  }\n\n  const updateData = (newData: IPartnerData) => {\n    dispatch({\n      type: UPDATE_PARTNER_DATA,\n      payload: newData,\n    })\n  }\n\n  return {\n    partnerData,\n    updateField,\n    updateData,\n  }\n}\n\nexport default usePartnerData\n","// Dependencies\nimport { useContext } from 'react'\n\n// State\nimport { store } from '../../state/store'\nimport {\n  ADD_SERVICE,\n  ADD_SERVICES,\n  UPDATE_SERVICE,\n  REMOVE_SERVICE,\n} from '../../state/reducer/index.types'\n\nconst usePartnerServices = () => {\n  const {\n    state: { services },\n    dispatch,\n  } = useContext(store)\n\n  const addService = (newService: IServiceItem) => {\n    dispatch({\n      type: ADD_SERVICE,\n      payload: newService,\n    })\n  }\n\n  const addServices = (newServices: IServiceItem[]) => {\n    dispatch({\n      type: ADD_SERVICES,\n      payload: newServices,\n    })\n  }\n\n  const updateService = (newService: IServiceItem) => {\n    dispatch({\n      type: UPDATE_SERVICE,\n      payload: newService,\n    })\n  }\n\n  const removeService = (id: IServiceItem['id']) => {\n    dispatch({\n      type: REMOVE_SERVICE,\n      payload: {\n        id,\n      },\n    })\n  }\n\n  return {\n    services,\n    addService,\n    addServices,\n    updateService,\n    removeService,\n  }\n}\n\nexport default usePartnerServices\n","// Typing\nimport { State } from '../store/index.types'\nimport {\n  ActionTypes,\n  UPDATE_PARTNER_DATA,\n  UPDATE_PARTNER_DATA_FIELD,\n  ADD_SERVICE,\n  ADD_SERVICES,\n  UPDATE_SERVICE,\n  REMOVE_SERVICE,\n  ADD_CLIENT,\n  ADD_CLIENTS,\n  UPDATE_CLIENT,\n  REMOVE_CLIENT,\n} from './index.types'\n\nexport default (state: State, action: ActionTypes) => {\n  switch (action.type) {\n    case UPDATE_PARTNER_DATA: {\n      const { partnerData } = state\n\n      return {\n        ...state,\n        partnerData: {\n          ...partnerData,\n          ...action.payload,\n        },\n      }\n    }\n\n    case UPDATE_PARTNER_DATA_FIELD: {\n      const { partnerData } = state\n      const { field, value } = action.payload\n\n      const newPartnerData = {\n        ...partnerData,\n        [field]: value,\n      }\n\n      return {\n        ...state,\n        partnerData: newPartnerData,\n      }\n    }\n\n    case ADD_SERVICE: {\n      const { services } = state\n\n      const newService = action.payload\n\n      return {\n        ...state,\n        services: [...services, newService],\n      }\n    }\n\n    case ADD_SERVICES: {\n      return {\n        ...state,\n        services: action.payload,\n      }\n    }\n\n    case UPDATE_SERVICE: {\n      const { services } = state\n\n      const newService = action.payload\n      const newServices = [...services]\n\n      services.forEach((service, index) => {\n        if (service.id === newService.id) {\n          newServices[index] = newService\n        }\n      })\n\n      return {\n        ...state,\n        services: newServices,\n      }\n    }\n\n    case REMOVE_SERVICE: {\n      const { services } = state\n\n      const { id } = action.payload\n\n      const newServices = services.filter((service) => service.id !== id)\n\n      return {\n        ...state,\n        services: newServices,\n      }\n    }\n\n    case ADD_CLIENT: {\n      const { clients } = state\n\n      const newClient = action.payload\n\n      return {\n        ...state,\n        clients: [...clients, newClient],\n      }\n    }\n\n    case ADD_CLIENTS: {\n      return {\n        ...state,\n        clients: action.payload,\n      }\n    }\n\n    case UPDATE_CLIENT: {\n      const { clients } = state\n\n      const newClient = action.payload\n      const newClients = [...clients]\n\n      clients.forEach((client, index) => {\n        if (client.id === newClient.id) {\n          newClients[index] = newClient\n        }\n      })\n\n      return {\n        ...state,\n        clients: newClients,\n      }\n    }\n\n    case REMOVE_CLIENT: {\n      const { clients } = state\n\n      const { id } = action.payload\n\n      const newClients = clients.filter((client) => client.id !== id)\n\n      return {\n        ...state,\n        clients: newClients,\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","// Typing\nimport { State } from '../store/index.types'\n\nexport const UPDATE_PARTNER_DATA = 'UPDATE_PARTNER_DATA'\nexport const UPDATE_PARTNER_DATA_FIELD = 'UPDATE_PARTNER_DATA_FIELD'\nexport const ADD_SERVICE = 'ADD_SERVICE'\nexport const ADD_SERVICES = 'ADD_SERVICES'\nexport const UPDATE_SERVICE = 'UPDATE_SERVICE'\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE'\nexport const ADD_CLIENT = 'ADD_CLIENT'\nexport const ADD_CLIENTS = 'ADD_CLIENTS'\nexport const UPDATE_CLIENT = 'UPDATE_CLIENT'\nexport const REMOVE_CLIENT = 'REMOVE_CLIENT'\n\nexport type PartnerDataFields = keyof State['partnerData']\n\nexport interface IUpdatePartnerDataFieldPayload {\n  field: PartnerDataFields\n  value: string | string[]\n}\n\ninterface IUpdatePartnerData {\n  type: typeof UPDATE_PARTNER_DATA\n  payload: State['partnerData']\n}\n\ninterface IUpdatePartnerDataField {\n  type: typeof UPDATE_PARTNER_DATA_FIELD\n  payload: IUpdatePartnerDataFieldPayload\n}\n\ninterface IAddService {\n  type: typeof ADD_SERVICE\n  payload: IServiceItem\n}\n\ninterface IAddServices {\n  type: typeof ADD_SERVICES\n  payload: IServiceItem[]\n}\n\ninterface IUpdateService {\n  type: typeof UPDATE_SERVICE\n  payload: IServiceItem\n}\n\ninterface IRemoveService {\n  type: typeof REMOVE_SERVICE\n  payload: {\n    id: IServiceItem['id']\n  }\n}\n\ninterface IAddClient {\n  type: typeof ADD_CLIENT\n  payload: IClientItem\n}\n\ninterface IAddClients {\n  type: typeof ADD_CLIENTS\n  payload: IClientItem[]\n}\n\ninterface IUpdateClient {\n  type: typeof UPDATE_CLIENT\n  payload: IClientItem\n}\n\ninterface IRemoveClient {\n  type: typeof REMOVE_CLIENT\n  payload: {\n    id: IClientItem['id']\n  }\n}\n\nexport type ActionTypes =\n  | IUpdatePartnerData\n  | IUpdatePartnerDataField\n  | IAddService\n  | IAddServices\n  | IUpdateService\n  | IRemoveService\n  | IAddClient\n  | IAddClients\n  | IUpdateClient\n  | IRemoveClient\n","// Dependencies\nimport React, { createContext, useReducer } from 'react'\n\n// Typing\nimport { State } from './index.types'\n\n// Reducer\nimport reducer from '../reducer'\n\nconst initialState: State = {\n  partnerData: {\n    id: '',\n    email: '',\n    // emailTecnico: '',\n    // emailMarketing: '',\n    // emailFinanceiro: '',\n    website: '',\n    name: '',\n    types: [],\n    regions: [],\n    imgURL: '',\n    description: '',\n    status: '',\n  },\n  clients: [],\n  services: [],\n}\n\ninterface ServiceContext {\n  state: State\n  dispatch: ReturnType<typeof useReducer>[1]\n}\n\nexport const store = createContext<ServiceContext>({\n  state: initialState,\n  dispatch() {},\n})\n\nconst { Provider } = store\n\nexport const StateProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>\n}\n"],"sourceRoot":""}